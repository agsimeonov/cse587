guides(fill=guide_legend(title="Gender"))
head(table)
head(day)
ggplot(day, aes(x=click_group, fill=click_group,
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(day, aes(x=Impressions, fill=age_group)) + geom_histogram(binwidth=1)
ggplot(day, aes(x=click_group, fill=click_group)) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(day, aes(x=click_group, fill=age_group,
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(day, aes(x=age_group, fill=age_group,
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(day, aes(x=Impressions, fill=age_group)) + geom_histogram(binwidth=1)
# Box and whisker plot
ggplot(day, aes(x=age_group, fill=age_group,
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(day, aes(x=click_group, fill=click_group,
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
table(age_group)
ggplot(subset(day, age_group=="<18"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, age_group=="18-24"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, age_group=="25-34"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, age_group=="35-44"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
age_group=="45-54"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_leg
ggplot(subset(day, age_group=="45-54"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, age_group=="45-54"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, age_group=="55-64"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, age_group=="65+"),
aes(x=Gender, fill=factor(Gender, labels=c("Female","Male")),
ymax=max(..count..))) + geom_histogram(binwidth=1) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1)) +
guides(fill=guide_legend(title="Gender"))
ggplot(subset(day, Clicks>0),
aes(x=Clicks/Impressions, fill=age_group)) + geom_histogram(binwidth=.025)
ggplot(subset(day, Clicks>0),
aes(x=Clicks/Impressions, fill=age_group)) + stat_density()
ggplot(subset(day, Clicks>0),
aes(x=age_group, y=Clicks/Impressions, fill=age_group)) + geom_violin()
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length)
head(day)
summaryBy(Clicks~click_group+Gender+age_group, data = day, FUN = length)
summaryBy(Age~click_group+Gender+age_group, data = day, FUN = length)
summaryBy(click_group+Gender+age_group, data = day, FUN = length)
summaryBy(..count..~click_group+Gender+age_group, data = day, FUN = length)
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length)
summaryBy(Impressions~click_group+Gender+age_group+Signed_In, data = day, FUN = length)
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length)
help(summaryBy)
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length, keep.names=TRUE)
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
var.names=c("a","b","c","d"))
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
fun.names=c("a","b","c","d"))
ggplot(subset(day, Impressions>0),
aes(x=Clicks/Impressions, colour=age_group)) + geom_density()
ggplot(day, aes(x=Impressions,color=age_group)) + geom_density()
summaryBy(day~click_group+Gender+age_group, data = day, FUN = length,
fun.names=c("a","b","c","d"))
summaryBy(~click_group+Gender+age_group, data = day, FUN = length,
fun.names=c("a","b","c","d"))
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
ar.names="joko")
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
var.names="joko")
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
var.names="joko", keep.names=TRUE)
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
var.names="Total Users", keep.names=TRUE)
summaryBy(Impressions~click_group+Gender+age_group, data = day, FUN = length,
var.names="Total_Users", keep.names=TRUE)
head(day)
summary(day)
siterange <- function(x){c(length(x), min(x), mean(x), max(x))}
summaryBy(Age~agecat, data =data1, FUN=siterange)
summaryBy(Age~age_group, data =day, FUN=siterange)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
prepare.package <- function(package){
if(package %in% rownames(installed.packages()) == FALSE) {
install.packages(package)
}
require(package, character.only = TRUE)
}
setwd(dirname(parent.frame(2)$ofile))
prepare.package("doBy")
prepare.package("ggplot2")
# Load the data for a specific day
cat(c("Initializing data...\n"), sep="")
if(file.exists("./data_set/nyt1.csv")) {
day <- read.csv(file="./data_set/nyt1.csv")
} else {
day <- read.csv(url("http://stat.columbia.edu/~rachel/datasets/nyt1.csv"))
}
getwd()
source('~/.active-rstudio-document')
groups <- read.csv(file="groups.csv")
days <- read.csv(file="days.csv")
source('~/.active-rstudio-document')
ggplot(day, aes(x=Impressions,color=age_group)) + geom_density()
require("ggplot2")
news(Version == "0.9.3.1", package = "ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
require("ggplot2")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/CSE_587_-_Project_1/RealDirect/realdirect.r')
View(mh.homes)
mh.homes$sale.month <-
factor(mh.homes$sale.month,
levels= c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November",
"December"))
mh.homes$sale.day <-
factor(mh.homes$sale.day,
levels= c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
ggplot(mh.homes, aes(x=sale.month, fill=sale.month, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/12)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(mh.homes, aes(x=sale.day, fill=sale.day, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/7)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
summaryBy(sale.price.n~sale.month data=mh.homes, FUN=sum)
summaryBy(sale.price.n~sale.month, data=mh.homes, FUN=sum)
summaryBy(sale.price.n+gross.sqft+land.sqft+year.built~sale.month, data=mh.homes, FUN=c(min, max))
summaryBy(sale.price.n+gross.sqft+land.sqft+year.built~sale.month, data=mh.homes, FUN=c(mean))
summaryBy(sale.price.n~sale.month, data=mh.homes, FUN=metrics)
summaryBy(gross.sqft~sale.month, data=mh.homes, FUN=metrics)
summaryBy(land.sqft~sale.month, data=mh.homes, FUN=metrics)
summaryBy(year.built~sale.month, data=mh.homes, FUN=metrics)
summaryBy(sale.price.n~sale.month, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
summaryBy(gross.sqft~sale.month, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
summaryBy(land.sqft~sale.month, data=mh.homes, FUN=metrics
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
summaryBy(land.sqft~sale.month, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
summaryBy(year.built~sale.month, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
summaryBy(sale.price.n~neighborhood, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
# Gross square feet across neighborhoods
summaryBy(gross.sqft~neighborhood, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
# Land square feet across neighborhoods
summaryBy(land.sqft~neighborhood, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
# Year built feet across neighborhoods
summaryBy(year.built~neighborhood, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
summaryBy(sale.price.n~sale.day, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
# Gross square feet across days of the week
summaryBy(gross.sqft~sale.day, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
# Land square feet across days of the week
summaryBy(land.sqft~sale.day, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
# Year built across days of the week
summaryBy(year.built~sale.day, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
ggplot(mh.homes, aes(x=sale.price.n, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
ggplot(mh.homes, aes(x=sale.month, y=sale.price.n, fill=sale.month)) +
geom_boxplot()
ggplot(mh.homes, aes(x=sale.month, y=sale.price.n, fill=sale.month)) +
geom_violin()
ggplot(mh.homes, aes(x=sale.price.n, color=sale.month)) + geom_density()
ggplot(mh.homes, aes(x=sale.month, y=sale.price.n, color=sale.month)) +
geom_jitter()
ggplot(mh.homes, aes(x=sale.month, sale.price.n, color=sale.month)) +
geom_point()
ggplot(mh.homes, aes(x=sale.price.n, fill=sale.month)) + stat_density()
ggplot(mh.homes, aes(x=sale.price.n, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
ggplot(mh.homes, aes(x=sale.month, y=sale.price.n, fill=sale.month)) +
geom_boxplot()
ggplot(mh.homes, aes(x=sale.price.n, color=sale.month)) + geom_density()
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.month, y=gross.sqft, fill=sale.month)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=gross.sqft, color=sale.month)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.month, gross.sqft, color=sale.month)) +
geom_point()
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/15))
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/100))
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/100))
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/60))
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/80))
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/40))
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/30))
ggplot(mh.homes, aes(x=land.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
ggplot(mh.homes, aes(x=land.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.month, y=land.sqft, fill=sale.month)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=land.sqft, color=sale.month)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.month, land.sqft, color=sale.month)) +
geom_point()
ggplot(mh.homes, aes(x=year.built, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$year.built)/60))
ggplot(mh.homes, aes(x=year.built, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$year.built)/30))
ggplot(mh.homes, aes(x=sale.month, y=year.built, fill=sale.month)) +
geom_boxplot()
ggplot(mh.homes, aes(x=year.built, color=sale.month)) + geom_density()
ggplot(mh.homes, aes(x=sale.month, year.built, color=sale.month)) +
geom_point()
ggplot(mh.homes, aes(x=sale.month, fill=sale.month, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/12)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
# By day of the week
ggplot(mh.homes, aes(x=sale.day, fill=sale.day, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/7)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(mh.homes, aes(x=sale.price.n, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=sale.price.n, fill=sale.day)) +
geom_boxplot()
ggplot(mh.homes, aes(x=sale.price.n, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, sale.price.n, color=sale.day)) + geom_point()
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=gross.sqft, fill=sale.day)) + geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=gross.sqft, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, gross.sqft, color=sale.day)) + geom_point()
ggplot(mh.homes, aes(x=land.sqft, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=land.sqft, fill=sale.day)) + geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=land.sqft, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, land.sqft, color=sale.day)) + geom_point()
ggplot(mh.homes, aes(x=year.built, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$year.built)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=year.built, fill=sale.day)) + geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=year.built, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, year.built, color=sale.day)) + geom_point()
ggplot(mh.homes, aes(log(gross.sqft), log(sale.price.n))) + geom_point()
ggplot(mh.homes, aes(gross.sqft, sale.price.n)) + geom_point()
ggplot(mh.homes, aes(x=neighborhood, fill=neighborhood, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/28)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(mh.homes, aes(x=sale.price.n, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
ggplot(mh.homes, aes(x=neighborhood, y=sale.price.n, fill=neighborhood)) +
geom_boxplot()
ggplot(mh.homes, aes(x=sale.price.n, color=neighborhood)) + geom_density()
ggplot(mh.homes, aes(x=neighborhood, sale.price.n, color=neighborhood)) +
geom_point()
ggplot(mh.homes, aes(x=gross.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/60))
ggplot(mh.homes, aes(x=neighborhood, y=gross.sqft, fill=neighborhood)) +
geom_boxplot()
ggplot(mh.homes, aes(x=gross.sqft, color=neighborhood)) + geom_density()
ggplot(mh.homes, aes(x=neighborhood, gross.sqft, color=neighborhood)) +
geom_point()
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/60))
ggplot(mh.homes, aes(x=neighborhood, y=land.sqft, fill=neighborhood)) +
geom_boxplot()
ggplot(mh.homes, aes(x=land.sqft, color=neighborhood)) + geom_density()
ggplot(mh.homes, aes(x=neighborhood, land.sqft, color=neighborhood)) +
geom_point()
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/60))
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
ggplot(mh.homes, aes(x=gross.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/60))
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
ggplot(mh.homes, aes(log(gross.sqft), log(sale.price.n))) + geom_point()
ggplot(mh.homes, aes(gross.sqft, sale.price.n)) + geom_point()
ggplot(mh.homes, aes(x=neighborhood, fill=neighborhood, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/28)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(mh.homes, aes(x=sale.price.n, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=neighborhood, y=sale.price.n, fill=neighborhood)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=sale.price.n, color=neighborhood)) + geom_density()
# Jitter Plot
ggplot(mh.homes, aes(x=neighborhood, y=sale.price.n, color=neighborhood)) +
geom_jitter()
# Scatter Plot
ggplot(mh.homes, aes(x=neighborhood, sale.price.n, color=neighborhood)) +
geom_point()
# Kernel density estimate
ggplot(mh.homes, aes(x=sale.price.n, fill=neighborhood)) + stat_density()
# Gross square feet across neighborhoods
# Histogram
ggplot(mh.homes, aes(x=gross.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=neighborhood, y=gross.sqft, fill=neighborhood)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=gross.sqft, color=neighborhood)) + geom_density()
# Jitter Plot
ggplot(mh.homes, aes(x=neighborhood, y=gross.sqft, color=neighborhood)) +
geom_jitter()
# Scatter Plot
ggplot(mh.homes, aes(x=neighborhood, gross.sqft, color=neighborhood)) +
geom_point()
# Kernel density estimate
ggplot(mh.homes, aes(x=gross.sqft, fill=neighborhood)) + stat_density()
# Land square feet across neighborhoods
# Histogram
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=neighborhood, y=land.sqft, fill=neighborhood)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=land.sqft, color=neighborhood)) + geom_density()
# Jitter Plot
ggplot(mh.homes, aes(x=neighborhood, y=land.sqft, color=neighborhood)) +
geom_jitter()
# Scatter Plot
ggplot(mh.homes, aes(x=neighborhood, land.sqft, color=neighborhood)) +
geom_point()
# Kernel density estimate
ggplot(mh.homes, aes(x=land.sqft, fill=neighborhood)) + stat_density()
# Year built across neighborhoods
# Histogram
ggplot(mh.homes, aes(x=year.built, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$year.built)/60))
ggplot(mh.homes, aes(x=neighborhood, y=year.built, fill=neighborhood)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=year.built, color=neighborhood)) + geom_density()
# Jitter Plot
ggplot(mh.homes, aes(x=neighborhood, y=year.built, color=neighborhood)) +
geom_jitter()
# Scatter Plot
ggplot(mh.homes, aes(x=neighborhood, year.built, color=neighborhood)) +
geom_point()
# Kernel density estimate
ggplot(mh.homes, aes(x=year.built, fill=neighborhood)) + stat_density()
ggplot(mh.homes, aes(x=sale.month, fill=sale.month, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/12)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
ggplot(mh.homes, aes(x=sale.day, fill=sale.day, ymax=max(..count..))) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/7)) +
stat_bin(binwidth=1,geom="text",drop=TRUE,aes(label=..count.., vjust=-1))
file.exists("./data_set/rollingsales_manhattan.xls")
file.exists("C:\\Users\\Frank\\Desktop\\dds_datasets\\rollingsales_brooklyn.xls")
perl
# Histogram
ggplot(mh.homes, aes(x=sale.price.n, fill=neighborhood)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
summaryBy(sale.price.n~sale.month, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
ggplot(mh.homes, aes(x=sale.price.n, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.month, y=sale.price.n, fill=sale.month)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=sale.price.n, color=sale.month)) + geom_density()
geom_point()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.month, sale.price.n, color=sale.month)) +
geom_point()
# Sale price across days of the week
# Histogram
ggplot(mh.homes, aes(x=sale.price.n, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$sale.price.n)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=sale.price.n, fill=sale.day)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=sale.price.n, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, sale.price.n, color=sale.day)) + geom_point()
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.month, y=gross.sqft, fill=sale.month)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=gross.sqft, color=sale.month)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.month, gross.sqft, color=sale.month)) + geom_point()
# Gross square feet (for sold homes) across days of the week
# Histogram
ggplot(mh.homes, aes(x=gross.sqft, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$gross.sqft)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=gross.sqft, fill=sale.day)) + geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=gross.sqft, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, gross.sqft, color=sale.day)) + geom_point()
ggplot(mh.homes, aes(x=land.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/60))
# Box and whisker plot
ggplot(mh.homes, aes(x=land.sqft, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.month, y=land.sqft, fill=sale.month)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=land.sqft, color=sale.month)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.month, land.sqft, color=sale.month)) + geom_point()
# Land square feet (for sold homes) across days of the week
# Histogram
ggplot(mh.homes, aes(x=land.sqft, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/60))
ggplot(mh.homes, aes(x=land.sqft, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$land.sqft)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=land.sqft, fill=sale.day)) + geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=land.sqft, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, land.sqft, color=sale.day)) + geom_point()
# Year built (for sold homes) across months
# Histogram
ggplot(mh.homes, aes(x=year.built, fill=sale.month)) +
geom_histogram(binwidth = diff(range(mh.homes$year.built)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.month, y=year.built, fill=sale.month)) +
geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=year.built, color=sale.month)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.month, year.built, color=sale.month)) + geom_point()
# Year built (for sold homes) across days of the week
# Histogram
ggplot(mh.homes, aes(x=year.built, fill=sale.day)) +
geom_histogram(binwidth = diff(range(mh.homes$year.built)/30))
# Box and whisker plot
ggplot(mh.homes, aes(x=sale.day, y=year.built, fill=sale.day)) + geom_boxplot()
# Density plot
ggplot(mh.homes, aes(x=year.built, color=sale.day)) + geom_density()
# Scatter Plot
ggplot(mh.homes, aes(x=sale.day, year.built, color=sale.day)) + geom_point()
source('~/Desktop/project1/realdirect/realdirect.r')
summaryBy(sale.price.n~sale.day, data=mh.homes, FUN=metrics,
fun.names=c("Count","Mean","Median","Mode","SD","Min","Max","Range"))
source('~/Desktop/project1/airline_on-time_performance/aotp.r')
